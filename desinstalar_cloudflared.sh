#!/bin/bash

# Script para desinstalar completamente o Cloudflared
# Remove containers Docker, imagens, redes e arquivos de configura√ß√£o

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîß Script de Desinstala√ß√£o do Cloudflared${NC}"
echo "=========================================="

# Fun√ß√£o para verificar se o Docker est√° rodando
check_docker() {
    if ! docker info > /dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  Docker n√£o est√° rodando. Continuando apenas com desinstala√ß√£o do sistema...${NC}"
        return 1
    fi
    return 0
}

# Fun√ß√£o para parar e remover containers Docker
remove_docker_containers() {
    echo -e "${BLUE}üê≥ Removendo containers Docker do Cloudflared...${NC}"
    
    # Parar e remover containers
    docker compose -f cloudflared/docker-compose-cloudflared.yml down 2>/dev/null || echo "Container n√£o encontrado"
    docker stop cloudflared_tunnel 2>/dev/null || echo "Container cloudflared_tunnel n√£o encontrado"
    docker rm cloudflared_tunnel 2>/dev/null || echo "Container cloudflared_tunnel n√£o encontrado"
    
    # Remover outros containers que possam ter cloudflared no nome
    docker ps -a --filter "name=cloudflared" --format "{{.Names}}" | xargs -r docker stop 2>/dev/null
    docker ps -a --filter "name=cloudflared" --format "{{.Names}}" | xargs -r docker rm 2>/dev/null
    
    echo -e "${GREEN}‚úÖ Containers Docker removidos!${NC}"
}

# Fun√ß√£o para remover imagens Docker
remove_docker_images() {
    echo -e "${BLUE}üóëÔ∏è  Removendo imagens Docker do Cloudflared...${NC}"
    
    # Remover imagens do cloudflare/cloudflared
    docker images cloudflare/cloudflared --format "{{.ID}}" | xargs -r docker rmi -f 2>/dev/null || echo "Nenhuma imagem encontrada"
    
    echo -e "${GREEN}‚úÖ Imagens Docker removidas!${NC}"
}

# Fun√ß√£o para remover redes Docker
remove_docker_networks() {
    echo -e "${BLUE}üåê Removendo redes Docker do Cloudflared...${NC}"
    
    # Remover rede espec√≠fica do cloudflared
    docker network rm cloudflared_network 2>/dev/null || echo "Rede cloudflared_network n√£o encontrada"
    
    # Remover outras redes que possam ter cloudflared no nome
    docker network ls --filter "name=cloudflared" --format "{{.Name}}" | xargs -r docker network rm 2>/dev/null
    
    echo -e "${GREEN}‚úÖ Redes Docker removidas!${NC}"
}

# Fun√ß√£o para remover volumes Docker
remove_docker_volumes() {
    echo -e "${BLUE}üíæ Removendo volumes Docker do Cloudflared...${NC}"
    
    # Remover volumes que possam ter cloudflared no nome
    docker volume ls --filter "name=cloudflared" --format "{{.Name}}" | xargs -r docker volume rm 2>/dev/null || echo "Nenhum volume encontrado"
    
    echo -e "${GREEN}‚úÖ Volumes Docker removidos!${NC}"
}

# Fun√ß√£o para parar servi√ßos do sistema
stop_system_services() {
    echo -e "${BLUE}üõë Parando servi√ßos do sistema Cloudflared...${NC}"
    
    # Tentar parar o servi√ßo cloudflared (Linux)
    sudo systemctl stop cloudflared 2>/dev/null || echo "Servi√ßo cloudflared n√£o encontrado"
    sudo systemctl disable cloudflared 2>/dev/null || echo "Servi√ßo cloudflared n√£o encontrado"
    
    # Tentar parar o servi√ßo cloudflared (macOS)
    sudo launchctl unload /Library/LaunchDaemons/com.cloudflare.cloudflared.plist 2>/dev/null || echo "Servi√ßo macOS n√£o encontrado"
    
    # Tentar parar o servi√ßo cloudflared (Windows - se estiver usando WSL)
    sudo net stop cloudflared 2>/dev/null || echo "Servi√ßo Windows n√£o encontrado"
    
    echo -e "${GREEN}‚úÖ Servi√ßos do sistema parados!${NC}"
}

# Fun√ß√£o para remover arquivos de configura√ß√£o
remove_config_files() {
    echo -e "${BLUE}üìÅ Removendo arquivos de configura√ß√£o...${NC}"
    
    # Remover diret√≥rio cloudflared do projeto
    if [ -d "cloudflared" ]; then
        echo "Removendo diret√≥rio cloudflared..."
        rm -rf cloudflared
    fi
    
    # Remover arquivos de configura√ß√£o espec√≠ficos
    rm -f cloudflared-config.yml 2>/dev/null || echo "Arquivo cloudflared-config.yml n√£o encontrado"
    rm -f .env 2>/dev/null || echo "Arquivo .env n√£o encontrado"
    
    # Remover arquivos de configura√ß√£o do sistema
    sudo rm -f /etc/cloudflared/config.yml 2>/dev/null || echo "Configura√ß√£o do sistema n√£o encontrada"
    sudo rm -f /etc/cloudflared/credentials.json 2>/dev/null || echo "Credenciais do sistema n√£o encontradas"
    sudo rm -rf /etc/cloudflared 2>/dev/null || echo "Diret√≥rio /etc/cloudflared n√£o encontrado"
    
    # Remover arquivos de configura√ß√£o do usu√°rio
    rm -f ~/.cloudflared/config.yml 2>/dev/null || echo "Configura√ß√£o do usu√°rio n√£o encontrada"
    rm -f ~/.cloudflared/credentials.json 2>/dev/null || echo "Credenciais do usu√°rio n√£o encontradas"
    rm -rf ~/.cloudflared 2>/dev/null || echo "Diret√≥rio ~/.cloudflared n√£o encontrado"
    
    echo -e "${GREEN}‚úÖ Arquivos de configura√ß√£o removidos!${NC}"
}

# Fun√ß√£o para desinstalar bin√°rio do sistema
uninstall_system_binary() {
    echo -e "${BLUE}üîß Desinstalando bin√°rio do sistema...${NC}"
    
    # Remover bin√°rio do cloudflared
    sudo rm -f /usr/local/bin/cloudflared 2>/dev/null || echo "Bin√°rio /usr/local/bin/cloudflared n√£o encontrado"
    sudo rm -f /usr/bin/cloudflared 2>/dev/null || echo "Bin√°rio /usr/bin/cloudflared n√£o encontrado"
    sudo rm -f /opt/cloudflared/cloudflared 2>/dev/null || echo "Bin√°rio /opt/cloudflared/cloudflared n√£o encontrado"
    
    # Remover diret√≥rio de instala√ß√£o
    sudo rm -rf /opt/cloudflared 2>/dev/null || echo "Diret√≥rio /opt/cloudflared n√£o encontrado"
    
    echo -e "${GREEN}‚úÖ Bin√°rio do sistema removido!${NC}"
}

# Fun√ß√£o para limpar cache e logs
clean_cache_logs() {
    echo -e "${BLUE}üßπ Limpando cache e logs...${NC}"
    
    # Limpar cache do Docker
    docker system prune -f 2>/dev/null || echo "Erro ao limpar cache do Docker"
    
    # Remover logs do cloudflared
    sudo rm -f /var/log/cloudflared.log 2>/dev/null || echo "Log do sistema n√£o encontrado"
    sudo rm -f /var/log/cloudflared/* 2>/dev/null || echo "Logs do sistema n√£o encontrados"
    
    echo -e "${GREEN}‚úÖ Cache e logs limpos!${NC}"
}

# Fun√ß√£o principal
main() {
    echo -e "${YELLOW}‚ö†Ô∏è  ATEN√á√ÉO: Este script ir√° remover completamente o Cloudflared!${NC}"
    echo "Isso inclui:"
    echo "- Containers Docker"
    echo "- Imagens Docker"
    echo "- Redes Docker"
    echo "- Arquivos de configura√ß√£o"
    echo "- Bin√°rios do sistema"
    echo "- Servi√ßos do sistema"
    echo ""
    
    read -p "Tem certeza que deseja continuar? (s/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Ss]$ ]]; then
        echo -e "${YELLOW}‚ùå Desinstala√ß√£o cancelada.${NC}"
        exit 0
    fi
    
    echo ""
    echo -e "${BLUE}üöÄ Iniciando desinstala√ß√£o completa...${NC}"
    echo ""
    
    # Verificar Docker
    if check_docker; then
        remove_docker_containers
        remove_docker_images
        remove_docker_networks
        remove_docker_volumes
    fi
    
    # Parar servi√ßos do sistema
    stop_system_services
    
    # Remover arquivos de configura√ß√£o
    remove_config_files
    
    # Desinstalar bin√°rio do sistema
    uninstall_system_binary
    
    # Limpar cache e logs
    clean_cache_logs
    
    echo ""
    echo -e "${GREEN}‚úÖ Desinstala√ß√£o completa do Cloudflared conclu√≠da!${NC}"
    echo ""
    echo -e "${BLUE}üìã Resumo do que foi removido:${NC}"
    echo "‚Ä¢ Containers Docker do Cloudflared"
    echo "‚Ä¢ Imagens Docker do Cloudflared"
    echo "‚Ä¢ Redes Docker do Cloudflared"
    echo "‚Ä¢ Arquivos de configura√ß√£o"
    echo "‚Ä¢ Bin√°rios do sistema"
    echo "‚Ä¢ Servi√ßos do sistema"
    echo "‚Ä¢ Cache e logs"
    echo ""
    echo -e "${YELLOW}üí° Dica: Se voc√™ quiser reinstalar o Cloudflared no futuro,${NC}"
    echo "   consulte a documenta√ß√£o oficial do Cloudflare."
}

# Executar fun√ß√£o principal
main "$@" 